/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.GetGrpStatAflResponseModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetGrpStatAflResponseModel', function() {
    it('should create an instance of GetGrpStatAflResponseModel', function() {
      // uncomment below and update the code to test GetGrpStatAflResponseModel
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be.a(FastApi.GetGrpStatAflResponseModel);
    });

    it('should have the property bitmapCvg (base name: "bitmap_cvg")', function() {
      // uncomment below and update the code to test the property bitmapCvg
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property corpusCount (base name: "corpus_count")', function() {
      // uncomment below and update the code to test the property corpusCount
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property corpusFavored (base name: "corpus_favored")', function() {
      // uncomment below and update the code to test the property corpusFavored
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property corpusFound (base name: "corpus_found")', function() {
      // uncomment below and update the code to test the property corpusFound
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property corpusVariable (base name: "corpus_variable")', function() {
      // uncomment below and update the code to test the property corpusVariable
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property cyclesDone (base name: "cycles_done")', function() {
      // uncomment below and update the code to test the property cyclesDone
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property cyclesWoFinds (base name: "cycles_wo_finds")', function() {
      // uncomment below and update the code to test the property cyclesWoFinds
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property execsDone (base name: "execs_done")', function() {
      // uncomment below and update the code to test the property execsDone
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property execsPerSec (base name: "execs_per_sec")', function() {
      // uncomment below and update the code to test the property execsPerSec
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property knownCrashes (base name: "known_crashes")', function() {
      // uncomment below and update the code to test the property knownCrashes
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property peakRssMb (base name: "peak_rss_mb")', function() {
      // uncomment below and update the code to test the property peakRssMb
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property slowestExecMs (base name: "slowest_exec_ms")', function() {
      // uncomment below and update the code to test the property slowestExecMs
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property stability (base name: "stability")', function() {
      // uncomment below and update the code to test the property stability
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property uniqueCrashes (base name: "unique_crashes")', function() {
      // uncomment below and update the code to test the property uniqueCrashes
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property workTime (base name: "work_time")', function() {
      // uncomment below and update the code to test the property workTime
      //var instance = new FastApi.GetGrpStatAflResponseModel();
      //expect(instance).to.be();
    });

  });

}));
