/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import ListEnginesResponseModel from '../model/ListEnginesResponseModel';
import ListIntegrationTypesResponseModel from '../model/ListIntegrationTypesResponseModel';
import ListLangsResponseModel from '../model/ListLangsResponseModel';
import PlatformConfigResponseModel from '../model/PlatformConfigResponseModel';

/**
* PlatformConfig service.
* @module api/PlatformConfigApi
* @version 0.1.0
*/
export default class PlatformConfigApi {

    /**
    * Constructs a new PlatformConfigApi. 
    * @alias module:api/PlatformConfigApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Platform Config
     * Returns platform configuration
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PlatformConfigResponseModel} and HTTP response
     */
    getPlatformConfigWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformConfigResponseModel;
      return this.apiClient.callApi(
        '/api/v1/config', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Platform Config
     * Returns platform configuration
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PlatformConfigResponseModel}
     */
    getPlatformConfig() {
      return this.getPlatformConfigWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List Platform Engines
     * Returns list of supported fuzzing engines
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.lang An enumeration.
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListEnginesResponseModel} and HTTP response
     */
    listPlatformEnginesWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'lang': opts['lang'],
        'pg_size': opts['pgSize'],
        'pg_num': opts['pgNum']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListEnginesResponseModel;
      return this.apiClient.callApi(
        '/api/v1/config/engines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List Platform Engines
     * Returns list of supported fuzzing engines
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.lang An enumeration.
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListEnginesResponseModel}
     */
    listPlatformEngines(opts) {
      return this.listPlatformEnginesWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List Platform Integration Types
     * Returns list of supported integration types
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListIntegrationTypesResponseModel} and HTTP response
     */
    listPlatformIntegrationTypesWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pg_size': opts['pgSize'],
        'pg_num': opts['pgNum']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListIntegrationTypesResponseModel;
      return this.apiClient.callApi(
        '/api/v1/config/integration_types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List Platform Integration Types
     * Returns list of supported integration types
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListIntegrationTypesResponseModel}
     */
    listPlatformIntegrationTypes(opts) {
      return this.listPlatformIntegrationTypesWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List Platform Langs
     * Returns list of supported programming languages
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListLangsResponseModel} and HTTP response
     */
    listPlatformLangsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pg_size': opts['pgSize'],
        'pg_num': opts['pgNum']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListLangsResponseModel;
      return this.apiClient.callApi(
        '/api/v1/config/langs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List Platform Langs
     * Returns list of supported programming languages
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pgSize  (default to 100)
     * @param {Number} opts.pgNum  (default to 0)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListLangsResponseModel}
     */
    listPlatformLangs(opts) {
      return this.listPlatformLangsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
