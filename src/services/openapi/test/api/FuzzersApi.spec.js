/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.FuzzersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FuzzersApi', function() {
    describe('changeCrashArchived', function() {
      it('should call changeCrashArchived successfully', function(done) {
        //uncomment below and update the code to test changeCrashArchived
        //instance.changeCrashArchived(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyCorpusFiles', function() {
      it('should call copyCorpusFiles successfully', function(done) {
        //uncomment below and update the code to test copyCorpusFiles
        //instance.copyCorpusFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countFuzzerCrashes', function() {
      it('should call countFuzzerCrashes successfully', function(done) {
        //uncomment below and update the code to test countFuzzerCrashes
        //instance.countFuzzerCrashes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countFuzzerStatisticsRecords', function() {
      it('should call countFuzzerStatisticsRecords successfully', function(done) {
        //uncomment below and update the code to test countFuzzerStatisticsRecords
        //instance.countFuzzerStatisticsRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countRevisionCrashes', function() {
      it('should call countRevisionCrashes successfully', function(done) {
        //uncomment below and update the code to test countRevisionCrashes
        //instance.countRevisionCrashes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countRevisionStatisticsRecords', function() {
      it('should call countRevisionStatisticsRecords successfully', function(done) {
        //uncomment below and update the code to test countRevisionStatisticsRecords
        //instance.countRevisionStatisticsRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFuzzer', function() {
      it('should call createFuzzer successfully', function(done) {
        //uncomment below and update the code to test createFuzzer
        //instance.createFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRevision', function() {
      it('should call createRevision successfully', function(done) {
        //uncomment below and update the code to test createRevision
        //instance.createRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFuzzer', function() {
      it('should call deleteFuzzer successfully', function(done) {
        //uncomment below and update the code to test deleteFuzzer
        //instance.deleteFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRevision', function() {
      it('should call deleteRevision successfully', function(done) {
        //uncomment below and update the code to test deleteRevision
        //instance.deleteRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadFuzzerCorpus', function() {
      it('should call downloadFuzzerCorpus successfully', function(done) {
        //uncomment below and update the code to test downloadFuzzerCorpus
        //instance.downloadFuzzerCorpus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadFuzzerCrash', function() {
      it('should call downloadFuzzerCrash successfully', function(done) {
        //uncomment below and update the code to test downloadFuzzerCrash
        //instance.downloadFuzzerCrash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadRevisionBinaries', function() {
      it('should call downloadRevisionBinaries successfully', function(done) {
        //uncomment below and update the code to test downloadRevisionBinaries
        //instance.downloadRevisionBinaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadRevisionConfig', function() {
      it('should call downloadRevisionConfig successfully', function(done) {
        //uncomment below and update the code to test downloadRevisionConfig
        //instance.downloadRevisionConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadRevisionSeeds', function() {
      it('should call downloadRevisionSeeds successfully', function(done) {
        //uncomment below and update the code to test downloadRevisionSeeds
        //instance.downloadRevisionSeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('emptyProjectTrashbin', function() {
      it('should call emptyProjectTrashbin successfully', function(done) {
        //uncomment below and update the code to test emptyProjectTrashbin
        //instance.emptyProjectTrashbin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eraseFuzzerInTrashbin', function() {
      it('should call eraseFuzzerInTrashbin successfully', function(done) {
        //uncomment below and update the code to test eraseFuzzerInTrashbin
        //instance.eraseFuzzerInTrashbin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getActiveRevision', function() {
      it('should call getActiveRevision successfully', function(done) {
        //uncomment below and update the code to test getActiveRevision
        //instance.getActiveRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFuzzer', function() {
      it('should call getFuzzer successfully', function(done) {
        //uncomment below and update the code to test getFuzzer
        //instance.getFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFuzzerByName', function() {
      it('should call getFuzzerByName successfully', function(done) {
        //uncomment below and update the code to test getFuzzerByName
        //instance.getFuzzerByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFuzzerCount', function() {
      it('should call getFuzzerCount successfully', function(done) {
        //uncomment below and update the code to test getFuzzerCount
        //instance.getFuzzerCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFuzzerCrash', function() {
      it('should call getFuzzerCrash successfully', function(done) {
        //uncomment below and update the code to test getFuzzerCrash
        //instance.getFuzzerCrash(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRevision', function() {
      it('should call getRevision successfully', function(done) {
        //uncomment below and update the code to test getRevision
        //instance.getRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRevisionByName', function() {
      it('should call getRevisionByName successfully', function(done) {
        //uncomment below and update the code to test getRevisionByName
        //instance.getRevisionByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRevisionCount', function() {
      it('should call getRevisionCount successfully', function(done) {
        //uncomment below and update the code to test getRevisionCount
        //instance.getRevisionCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrashbinFuzzersCount', function() {
      it('should call getTrashbinFuzzersCount successfully', function(done) {
        //uncomment below and update the code to test getTrashbinFuzzersCount
        //instance.getTrashbinFuzzersCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFuzzerCrashes', function() {
      it('should call listFuzzerCrashes successfully', function(done) {
        //uncomment below and update the code to test listFuzzerCrashes
        //instance.listFuzzerCrashes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFuzzerStatistics', function() {
      it('should call listFuzzerStatistics successfully', function(done) {
        //uncomment below and update the code to test listFuzzerStatistics
        //instance.listFuzzerStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFuzzers', function() {
      it('should call listFuzzers successfully', function(done) {
        //uncomment below and update the code to test listFuzzers
        //instance.listFuzzers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRevisionCrashes', function() {
      it('should call listRevisionCrashes successfully', function(done) {
        //uncomment below and update the code to test listRevisionCrashes
        //instance.listRevisionCrashes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRevisionStatistics', function() {
      it('should call listRevisionStatistics successfully', function(done) {
        //uncomment below and update the code to test listRevisionStatistics
        //instance.listRevisionStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRevisions', function() {
      it('should call listRevisions successfully', function(done) {
        //uncomment below and update the code to test listRevisions
        //instance.listRevisions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTrashbinFuzzers', function() {
      it('should call listTrashbinFuzzers successfully', function(done) {
        //uncomment below and update the code to test listTrashbinFuzzers
        //instance.listTrashbinFuzzers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartFuzzer', function() {
      it('should call restartFuzzer successfully', function(done) {
        //uncomment below and update the code to test restartFuzzer
        //instance.restartFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartRevision', function() {
      it('should call restartRevision successfully', function(done) {
        //uncomment below and update the code to test restartRevision
        //instance.restartRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setActiveRevision', function() {
      it('should call setActiveRevision successfully', function(done) {
        //uncomment below and update the code to test setActiveRevision
        //instance.setActiveRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startFuzzer', function() {
      it('should call startFuzzer successfully', function(done) {
        //uncomment below and update the code to test startFuzzer
        //instance.startFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startRevision', function() {
      it('should call startRevision successfully', function(done) {
        //uncomment below and update the code to test startRevision
        //instance.startRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopFuzzer', function() {
      it('should call stopFuzzer successfully', function(done) {
        //uncomment below and update the code to test stopFuzzer
        //instance.stopFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopRevision', function() {
      it('should call stopRevision successfully', function(done) {
        //uncomment below and update the code to test stopRevision
        //instance.stopRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFuzzer', function() {
      it('should call updateFuzzer successfully', function(done) {
        //uncomment below and update the code to test updateFuzzer
        //instance.updateFuzzer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRevisionInformation', function() {
      it('should call updateRevisionInformation successfully', function(done) {
        //uncomment below and update the code to test updateRevisionInformation
        //instance.updateRevisionInformation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRevisionResources', function() {
      it('should call updateRevisionResources successfully', function(done) {
        //uncomment below and update the code to test updateRevisionResources
        //instance.updateRevisionResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadRevisionBinaries', function() {
      it('should call uploadRevisionBinaries successfully', function(done) {
        //uncomment below and update the code to test uploadRevisionBinaries
        //instance.uploadRevisionBinaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadRevisionConfig', function() {
      it('should call uploadRevisionConfig successfully', function(done) {
        //uncomment below and update the code to test uploadRevisionConfig
        //instance.uploadRevisionConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadRevisionSeeds', function() {
      it('should call uploadRevisionSeeds successfully', function(done) {
        //uncomment below and update the code to test uploadRevisionSeeds
        //instance.uploadRevisionSeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
