/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PoolNode from './PoolNode';

/**
 * The PoolResources model module.
 * @module model/PoolResources
 * @version 0.1.0
 */
class PoolResources {
    /**
     * Constructs a new <code>PoolResources</code>.
     * @alias module:model/PoolResources
     * @param cpuAvail {Number} 
     * @param cpuTotal {Number} 
     * @param fuzzerMaxCpu {Number} 
     * @param fuzzerMaxRam {Number} 
     * @param nodes {Array.<module:model/PoolNode>} 
     * @param nodesAvail {Number} 
     * @param nodesTotal {Number} 
     * @param ramAvail {Number} 
     * @param ramTotal {Number} 
     */
    constructor(cpuAvail, cpuTotal, fuzzerMaxCpu, fuzzerMaxRam, nodes, nodesAvail, nodesTotal, ramAvail, ramTotal) { 
        
        PoolResources.initialize(this, cpuAvail, cpuTotal, fuzzerMaxCpu, fuzzerMaxRam, nodes, nodesAvail, nodesTotal, ramAvail, ramTotal);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cpuAvail, cpuTotal, fuzzerMaxCpu, fuzzerMaxRam, nodes, nodesAvail, nodesTotal, ramAvail, ramTotal) { 
        obj['cpu_avail'] = cpuAvail;
        obj['cpu_total'] = cpuTotal;
        obj['fuzzer_max_cpu'] = fuzzerMaxCpu;
        obj['fuzzer_max_ram'] = fuzzerMaxRam;
        obj['nodes'] = nodes;
        obj['nodes_avail'] = nodesAvail;
        obj['nodes_total'] = nodesTotal;
        obj['ram_avail'] = ramAvail;
        obj['ram_total'] = ramTotal;
    }

    /**
     * Constructs a <code>PoolResources</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolResources} obj Optional instance to populate.
     * @return {module:model/PoolResources} The populated <code>PoolResources</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolResources();

            if (data.hasOwnProperty('cpu_avail')) {
                obj['cpu_avail'] = ApiClient.convertToType(data['cpu_avail'], 'Number');
            }
            if (data.hasOwnProperty('cpu_total')) {
                obj['cpu_total'] = ApiClient.convertToType(data['cpu_total'], 'Number');
            }
            if (data.hasOwnProperty('fuzzer_max_cpu')) {
                obj['fuzzer_max_cpu'] = ApiClient.convertToType(data['fuzzer_max_cpu'], 'Number');
            }
            if (data.hasOwnProperty('fuzzer_max_ram')) {
                obj['fuzzer_max_ram'] = ApiClient.convertToType(data['fuzzer_max_ram'], 'Number');
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [PoolNode]);
            }
            if (data.hasOwnProperty('nodes_avail')) {
                obj['nodes_avail'] = ApiClient.convertToType(data['nodes_avail'], 'Number');
            }
            if (data.hasOwnProperty('nodes_total')) {
                obj['nodes_total'] = ApiClient.convertToType(data['nodes_total'], 'Number');
            }
            if (data.hasOwnProperty('ram_avail')) {
                obj['ram_avail'] = ApiClient.convertToType(data['ram_avail'], 'Number');
            }
            if (data.hasOwnProperty('ram_total')) {
                obj['ram_total'] = ApiClient.convertToType(data['ram_total'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} cpu_avail
 */
PoolResources.prototype['cpu_avail'] = undefined;

/**
 * @member {Number} cpu_total
 */
PoolResources.prototype['cpu_total'] = undefined;

/**
 * @member {Number} fuzzer_max_cpu
 */
PoolResources.prototype['fuzzer_max_cpu'] = undefined;

/**
 * @member {Number} fuzzer_max_ram
 */
PoolResources.prototype['fuzzer_max_ram'] = undefined;

/**
 * @member {Array.<module:model/PoolNode>} nodes
 */
PoolResources.prototype['nodes'] = undefined;

/**
 * @member {Number} nodes_avail
 */
PoolResources.prototype['nodes_avail'] = undefined;

/**
 * @member {Number} nodes_total
 */
PoolResources.prototype['nodes_total'] = undefined;

/**
 * @member {Number} ram_avail
 */
PoolResources.prototype['ram_avail'] = undefined;

/**
 * @member {Number} ram_total
 */
PoolResources.prototype['ram_total'] = undefined;






export default PoolResources;

